// English.cpp : 定义 DLL 应用程序的导出函数。
//

#include "stdafx.h"
#include "English.h"



ENGLISH_API LPCTSTR IDS_TITLE = _T("Agora Media Source");
ENGLISH_API LPCTSTR IDS_LOGO_DESC = _T("Powering Real-Time Communications");
ENGLISH_API LPCTSTR IDS_LOGO_AGORAWEB = _T("agora.io");

ENGLISH_API LPCTSTR IDS_CONTACT = _T("Contact support: ");
ENGLISH_API LPCTSTR IDS_PHONENUMBER = _T("400 632 6626");

ENGLISH_API LPCTSTR IDS_PRE_TITLE = _T("Slelct conference type");
ENGLISH_API LPCTSTR IDS_PRE_OPTDSC1 = _T("* Optimized calls have best performance but");
ENGLISH_API LPCTSTR IDS_PRE_OPTDSC2 = _T("  cannot be joined by web participants");
ENGLISH_API LPCTSTR IDS_PRE_WEBDSC1 = _T("* Web-compatible calls have goog performance");
ENGLISH_API LPCTSTR IDS_PRE_WEBDSC2 = _T("  and open to web participants");
ENGLISH_API LPCTSTR IDS_PRE_BTNOPT = _T("Optimized");
ENGLISH_API LPCTSTR IDS_PRE_BTNWEB = _T("Web-compatible");

ENGLISH_API LPCTSTR IDS_CHN_TITLE = _T("Enter a conference room name");
ENGLISH_API LPCTSTR IDS_CHN_DSC1 = _T("if you are the first person to specify this name,the room will be created and you will be");
ENGLISH_API LPCTSTR IDS_CHN_DSC2 = _T("placed in it.if it has already been created you will join the conference in progress");
// ENGLISH_API LPCTSTR IDS_CHN_DSC3 = _T("");
// ENGLISH_API LPCTSTR IDS_CHN_DSC4 = _T("progress");

ENGLISH_API LPCTSTR IDS_CHN_BTBACK = _T("Back");
ENGLISH_API LPCTSTR IDS_CHN_BTEXTCAP = _T("ExtCapture");
ENGLISH_API LPCTSTR IDS_CHN_BTTEST = _T("Test");
ENGLISH_API LPCTSTR IDS_CHN_BTJOIN = _T("Join");

ENGLISH_API LPCTSTR IDS_CHN_CHTIP = _T("ChannelName");
ENGLISH_API LPCTSTR IDS_CHN_KEYTIP = _T("EncryptionKey");

ENGLISH_API LPCTSTR IDS_CHN_ENCTYPE = _T("EncType:");
ENGLISH_API LPCTSTR IDS_CHN_AES128XTS = _T("aes-128");
ENGLISH_API LPCTSTR IDS_CHN_AES128GCM = _T("aes-128-gcm");
ENGLISH_API LPCTSTR IDS_CHN_AES128CCM = _T("aes-128-ccm");
ENGLISH_API LPCTSTR IDS_CHN_AES128CTR = _T("aes-128-ctr");
ENGLISH_API LPCTSTR IDS_CHN_AES256XTS = _T("aes-256");
ENGLISH_API LPCTSTR IDS_CHN_AES256GCM = _T("aes-256-gcm");
ENGLISH_API LPCTSTR IDS_CHN_AES256CCM = _T("aes-256-ccm");
ENGLISH_API LPCTSTR IDS_CHN_AES256CTR = _T("aes-256-ctr");

ENGLISH_API LPCTSTR IDS_SET_RESOLUTION = _T("Resolution");
ENGLISH_API LPCTSTR IDS_SET_MFR = _T("Max Frame rate");
ENGLISH_API LPCTSTR IDS_SET_MR = _T("Max rate");
ENGLISH_API LPCTSTR IDS_SET_BTCONFIRM = _T("Confirm");

ENGLISH_API LPCTSTR IDS_SET_CODEC = _T("Codec");
ENGLISH_API LPCTSTR IDS_SET_SWAPWH = _T("swap wide and height");
ENGLISH_API LPCTSTR IDS_SET_SAVESETTING = _T("save the settings");

ENGLISH_API LPCTSTR IDS_DEVICE_AUDIOIN = _T("Input Device:");
ENGLISH_API LPCTSTR IDS_DEVICE_AUDIOOUT = _T("Output Device:");
ENGLISH_API LPCTSTR IDS_DEVICE_CAMERA = _T("Camera:");
ENGLISH_API LPCTSTR IDS_DEVICE_VOLUME = _T("Volume");
ENGLISH_API LPCTSTR IDS_DEVICE_BTNTEST = _T("test");
ENGLISH_API LPCTSTR IDS_DEVICE_BTNTESTOFF = _T("Stop");
ENGLISH_API LPCTSTR IDS_DEVICE_CANCEL = _T("Cancel");
ENGLISH_API LPCTSTR IDS_DEVICE_CONFIRM = _T("Confirm");
ENGLISH_API LPCTSTR IDS_DEVICE_APPLY = _T("Apply");

ENGLISH_API LPCTSTR IDS_VIDEO_SCRSHARE = _T("Screen Share");
ENGLISH_API LPCTSTR IDS_VIDEO_WNDSHARE = _T("Window Share");

ENGLISH_API LPCTSTR IDS_VIDEO_WBHOST = _T("Host Mode");
ENGLISH_API LPCTSTR IDS_VIDEO_WBGUEST = _T("Guest Mode");

ENGLISH_API LPCTSTR IDS_VIDEO_MOREINFO = _T("Video Info");
ENGLISH_API LPCTSTR IDS_VIDEO_MOREDEVICE = _T("Device");
ENGLISH_API LPCTSTR IDS_VIDEO_MOREFILTER = _T("Video Filter");